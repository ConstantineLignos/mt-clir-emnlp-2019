ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01))
ggsave('tau.bleu.rbo.png', width = 5.0, height = 3.0, units = 'in')
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("MT Metric") + labs(color = "Dataset and Model")
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("MT Metric") + labs(color = "Dataset and Model") + scale_color_discrete(breaks=c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels=c("Europarl BM25", "Europarl BM25", "Wikipedia neural"))
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("MT Metric") + labs(color = "Dataset & Model") + scale_color_discrete(breaks=c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels=c("Europarl BM25", "Europarl BM25", "Wikipedia neural"))
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("MT Metric") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Europarl BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram'))
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Europarl BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram'))
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Europarl BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram'))
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Europarl BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram')) + scale_linetype_manual("BLEU", values = c("BLEU" = 2))
?scale_color_discrete
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Europarl BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram')) + scale_linetype_discrete("BLEU", values = c("BLEU" = 2))
?scale_linetype_discrete
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Europarl BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram')) + scale_linetype_discrete("BLEU", values = c("BLEU" = 2)) + geom_line(aes())
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Europarl BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram')) +  geom_line(aes())
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Europarl BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram')) +  geom_line(aes()) + scale_linetype_manual("BLEU", values = c("BLEU" = 2))
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model, show_guide = TRUE), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Europarl BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram')) +  geom_line(aes()) + scale_linetype_manual("BLEU", values = c("BLEU" = 2))
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2,  show_guide = TRUE) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Europarl BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram')) +  geom_line(aes()) + scale_linetype_manual("BLEU", values = c("BLEU" = 2))
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2,  show.legend = TRUE) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Europarl BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram')) # scale_linetype_manual("BLEU", values = c("BLEU" = 2))
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Europarl BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram')) # scale_linetype_manual("BLEU", values = c("BLEU" = 2))
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2,  show.legend = TRUE) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Europarl BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram')) + scale_linetype_manual("BLEU", values = c("BLEU" = 2))
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2,  show.legend = TRUE) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Europarl BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram')) + scale_linetype_manual(name = "BLEU", values = "dashed", labels = "")
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2,  show.legend = TRUE) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Europarl BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram')) + scale_linetype_manual(name = "BLEU", values = "dashed", labels = "") + guides(fill = guide_legend(override.aes = list(linetype = "blank")))
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2,  show.legend = TRUE) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Europarl BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram')) + scale_linetype_manual(name = "BLEU", values = "dashed", labels = "") + guides(fill = guide_legend(override.aes = list(linetype = 2)))
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2,  show.legend = TRUE) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Europarl BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram')) + scale_linetype_manual(name = "BLEU", values = "dashed", labels = "")
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Europarl BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram'))
ggsave('tau.bleu.rbo.png', width = 5.0, height = 2.5, units = 'in')
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Europarl BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram'))
ggsave('tau.bleu.rbo.png', width = 5.0, height = 2.5, units = 'in')
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Europarl BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram'))
ggsave('tau.bleu.rbo.png', width = 4.0, height = 2.0, units = 'in')
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Europarl BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram'))
ggsave('tau.bleu.rbo.png', width = 4.5, height = 2.25, units = 'in')
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01))
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Europarl BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram'))
# Regression
summary(lm(map ~ I(bleu.lower / 100) + dataset + lang + model + bpe.tokens, all))
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Wikipedia BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram'))
ggsave('tau.bleu.rbo.png', width = 4.5, height = 2.25, units = 'in')
library(dplyr)
library(ggplot2)
library(scales)
theme_set(theme_bw())
corrs <- as.tbl(read.csv('mt_ir_scores_corr.tsv', sep='\t'))
corrs <- unite(corrs, dataset.model, dataset, model, remove = FALSE)
corrs <- corrs %>% group_by(dataset.model, measure1, measure2) %>% summarise_if(is.numeric, mean, na.rm = TRUE)
corrs.rbo <- filter(corrs, measure2 == 'rbo')
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Wikipedia BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram'))
ggsave('tau.bleu.rbo.png', width = 4.5, height = 2.25, units = 'in')
library(tidyr)
corrs <- as.tbl(read.csv('mt_ir_scores_corr.tsv', sep='\t'))
corrs <- unite(corrs, dataset.model, dataset, model, remove = FALSE)
corrs <- corrs %>% group_by(dataset.model, measure1, measure2) %>% summarise_if(is.numeric, mean, na.rm = TRUE)
corrs.rbo <- filter(corrs, measure2 == 'rbo')
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Wikipedia BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram'))
ggsave('tau.bleu.rbo.png', width = 4.5, height = 2.25, units = 'in')
library(tidyr)
library(dplyr)
library(ggplot2)
library(scales)
theme_set(theme_bw())
corrs <- as.tbl(read.csv('mt_ir_scores_corr.tsv', sep='\t'))
corrs <- unite(corrs, dataset.model, dataset, model, remove = FALSE)
corrs <- corrs %>% group_by(dataset.model, measure1, measure2) %>% summarise_if(is.numeric, mean, na.rm = TRUE)
corrs.rbo <- filter(corrs, measure2 == 'rbo')
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Wikipedia BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram'))
ggsave('tau.bleu.rbo.png', width = 4.5, height = 2.25, units = 'in')
install.packages(c("tidyr", "dplyr", "ggplot2", "scales"))
library(MASS)
library(tidyr)
library(dplyr)
library(ggplot2)
library(scales)
theme_set(theme_bw())
mt <- as.tbl(read.csv('mt_scores.csv', sep='\t'))
mt$bpe.tokens <- factor(mt$bpe.tokens)
summary(mt)
ir <- as.tbl(read.csv('ir_scores.tsv', sep='\t'))
ir$bpe.tokens <- factor(ir$bpe.tokens)
summary(ir)
ir.all <- filter(ir, query == 'all')
ir.queries <- filter(ir, query != 'all')
write.table(ir.queries, 'ir_scores_queries_only.tsv', sep = '\t', quote = FALSE, row.names = FALSE)
all <- left_join(ir.all, mt, by = c('lang', 'size', 'bpe.tokens'))
summary(all)
write.table(all, 'mt_ir_scores_all.tsv', sep = '\t', quote = FALSE, row.names = FALSE)
facet_labels <- c(
"cs" = "Czech",
"de" = "German",
"wiki" = "Wikipedia",
"europarl" = "Europarl",
"bm25" = "BM25",
"neural" = "Neural"
)
facet_labeller <- as_labeller(facet_labels)
# Test set BLEU
ggplot(mt, aes(size, bleu.lower, group=interaction(lang, bpe.tokens), color = bpe.tokens)) + geom_point() + geom_line() + facet_grid(rows = vars(lang), labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('BLEU') + scale_y_continuous(breaks = seq(10, 36, 2)) + labs(color = 'BPE Size')
ggsave('size.bleu.bpe.png', width = 4.5, height = 3.0, units = 'in')
# Test set BLEU
ggplot(mt, aes(size, bleu.lower, group=interaction(lang, bpe.tokens), color = bpe.tokens)) + geom_point() + geom_line() + facet_grid(rows = vars(lang), labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('BLEU') + scale_y_continuous(breaks = seq(10, 36, 2)) + labs(color = 'BPE Size')
# Test set BLEU
ggplot(mt, aes(size, bleu.lower, group=interaction(lang, bpe.tokens), color = bpe.tokens)) + geom_point() + geom_line() + facet_grid(rows = vars(lang), labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('BLEU') + scale_y_continuous(breaks = seq(10, 36, 2)) + labs(color = 'BPE Size') + scale_colour_grey()
?scale_color_grey()
# Test set BLEU
ggplot(mt, aes(size, bleu.lower, group=interaction(lang, bpe.tokens), color = bpe.tokens)) + geom_point() + geom_line() + facet_grid(rows = vars(lang), labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('BLEU') + scale_y_continuous(breaks = seq(10, 36, 2)) + labs(color = 'BPE Size') + scale_colour_grey()
# Test set BLEU
ggplot(mt, aes(size, bleu.lower, group=interaction(lang, bpe.tokens), color = bpe.tokens)) + geom_point() + geom_line() + facet_grid(rows = vars(lang), labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('BLEU') + scale_y_continuous(breaks = seq(10, 36, 2)) + labs(color = 'BPE Size') + scale_colour_grey(start = 0.5)
# Test set BLEU
ggplot(mt, aes(size, bleu.lower, group=interaction(lang, bpe.tokens), color = bpe.tokens)) + geom_point() + geom_line() + facet_grid(rows = vars(lang), labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('BLEU') + scale_y_continuous(breaks = seq(10, 36, 2)) + labs(color = 'BPE Size') + scale_colour_grey(start = 0.2)
# Test set BLEU
ggplot(mt, aes(size, bleu.lower, group=interaction(lang, bpe.tokens), color = bpe.tokens)) + geom_point() + geom_line() + facet_grid(rows = vars(lang), labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('BLEU') + scale_y_continuous(breaks = seq(10, 36, 2)) + labs(color = 'BPE Size') + scale_colour_grey(start = 0.2, end = 0.8)
# Test set BLEU
ggplot(mt, aes(size, bleu.lower, group=interaction(lang, bpe.tokens), color = bpe.tokens)) + geom_point() + geom_line() + facet_grid(rows = vars(lang), labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('BLEU') + scale_y_continuous(breaks = seq(10, 36, 2)) + labs(color = 'BPE Size') + scale_colour_grey(start = 0.2, end = 0.6)
# Test set BLEU
ggplot(mt, aes(size, bleu.lower, group=interaction(lang, bpe.tokens), color = bpe.tokens)) + geom_point() + geom_line() + facet_grid(rows = vars(lang), labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('BLEU') + scale_y_continuous(breaks = seq(10, 36, 2)) + labs(color = 'BPE Size') + scale_colour_grey(start = 0.0, end = 0.6)
# Test set BLEU
ggplot(mt, aes(size, bleu.lower, group=interaction(lang, bpe.tokens), color = bpe.tokens)) + geom_point() + geom_line() + facet_grid(rows = vars(lang), labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('BLEU') + scale_y_continuous(breaks = seq(10, 36, 2)) + labs(color = 'BPE Size') + scale_colour_grey(start = 0.0, end = 0.7)
# Test set BLEU
ggplot(mt, aes(size, bleu.lower, group=interaction(lang, bpe.tokens), color = bpe.tokens)) + geom_point() + geom_line() + facet_grid(rows = vars(lang), labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('BLEU') + scale_y_continuous(breaks = seq(10, 36, 2)) + labs(color = 'BPE Size') + scale_colour_grey(start = 0.0, end = 0.9)
# Test set BLEU
ggplot(mt, aes(size, bleu.lower, group=interaction(lang, bpe.tokens), color = bpe.tokens)) + geom_point() + geom_line() + facet_grid(rows = vars(lang), labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('BLEU') + scale_y_continuous(breaks = seq(10, 36, 2)) + labs(color = 'BPE Size') + scale_colour_grey(start = 0.0, end = 0.1)
# Test set BLEU
ggplot(mt, aes(size, bleu.lower, group=interaction(lang, bpe.tokens), color = bpe.tokens)) + geom_point() + geom_line() + facet_grid(rows = vars(lang), labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('BLEU') + scale_y_continuous(breaks = seq(10, 36, 2)) + labs(color = 'BPE Size') + scale_colour_grey(start = 0.0, end = 0.4)
# Test set BLEU
ggplot(mt, aes(size, bleu.lower, group=interaction(lang, bpe.tokens), color = bpe.tokens)) + geom_point() + geom_line() + facet_grid(rows = vars(lang), labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('BLEU') + scale_y_continuous(breaks = seq(10, 36, 2)) + labs(color = 'BPE Size') + scale_colour_grey(start = 0.0, end = 0.5)
# Test set BLEU
ggplot(mt, aes(size, bleu.lower, group=interaction(lang, bpe.tokens), color = bpe.tokens)) + geom_point() + geom_line() + facet_grid(rows = vars(lang), labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('BLEU') + scale_y_continuous(breaks = seq(10, 36, 2)) + labs(color = 'BPE Size') + scale_colour_grey(start = 0.0, end = 0.6)
ggplot(ir.all, aes(size, rbo, group=interaction(lang, bpe.tokens), color = bpe.tokens)) + geom_point() + geom_line() + facet_grid(cols = vars(lang), rows = vars(dataset, model), scales = 'free', labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('RBO') + labs(color = 'BPE Size') + scale_y_continuous(
labels = number_format(accuracy = 0.01))
ggplot(all, aes(blue, map)) + geom_smooth()
ggplot(all, aes(bleu, map)) + geom_smooth()
ggplot(all, aes(bleu.lower, map)) + geom_smooth()
ggplot(all, aes(bleu.lower, map, color = lang)) + geom_smooth()
ggplot(all, aes(bleu.lower, map, color = c(lang, model)) + geom_smooth()
ggplot(all, aes(bleu.lower, map, color = c(lang, model)) + geom_smooth()
ggplot(all, aes(bleu.lower, map, color = c(lang, model))) + geom_smooth()
ggplot(all, aes(bleu.lower, map, color = c(lang, model))) + geom_smooth()
summary(all)
ggplot(filter(all, model == 'bm25') , aes(bleu.lower, map)) + geom_point()
corrs <- as.tbl(read.csv('mt_ir_scores_corr.tsv', sep='\t'))
corrs <- unite(corrs, dataset.model, dataset, model, remove = FALSE)
corrs <- corrs %>% group_by(dataset.model, measure1, measure2) %>% summarise_if(is.numeric, mean, na.rm = TRUE)
corrs.rbo <- filter(corrs, measure2 == 'rbo')
summary(corrs)
?geom_point
ggplot(all, aes(bleu.lower, map, color = lang:dataset:model)) + geom_line()
ggplot(all, aes(bleu.lower, map, color = dataset:lang:model)) + geom_line()
ggplot(all, aes(bleu.lower, map, color = dataset:lang:model)) + stat_smooth()
ggplot(all, aes(bleu.lower, map, color = dataset:lang:model)) + geom_smooth()
?stat_smooth
ggplot(all, aes(bleu.lower, map, color = dataset:lang:model)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"))
?geom_smooth
ggplot(all, aes(bleu.lower, map, color = dataset:lang:model)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs")) + geom_point()
ggplot(all, aes(bleu.lower, rbo, color = dataset:lang:model)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs")) + geom_point()
source('~/repos/mt-evaluation/analysis/analyze_mt.R', echo=TRUE)
ggplot(all, aes(bleu.lower, rbo, color = dataset:model)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs")) + geom_point()
ggplot(all, aes(bleu.lower, rbo, color = dataset:model)) + geom_smooth() + geom_point()
ggplot(all, aes(bleu.lower, rbo, color = dataset:model)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs")) + geom_point()
ggplot(all, aes(bleu.lower, map, color = dataset:model)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs")) + geom_point()
ggplot(all, aes(bleu.lower, map, color = dataset:lang:model)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs")) + geom_point()
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs")) + geom_point()
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs")) + geom_point() + theme(legend.position = "bottom")
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs")) + geom_point() + theme(legend.position = "bottom", label) + facet_labeller()
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs")) + geom_point() + theme(legend.position = "bottom") + facet_labeller()
bleu.precs
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Wikipedia BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram'))
summary(corrs.rbo)
?Gather
?gather
unique(corrs.rbo$measure1)
ggsave('bleu.map.all.png', width = 4.5, height = 4.5, units = 'in')
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs")) + geom_point() + theme(legend.position = "bottom")
ggsave('bleu.map.all.png', width = 4.5, height = 4.5, units = 'in')
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs")) + geom_point() + theme(legend.position = "bottom") + guide_legend(nrow = 3)
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs")) + geom_point() + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3))
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs")) + geom_point() + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 6))
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs")) + geom_point() + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3))
ggsave('bleu.map.all.png', width = 4.5, height = 4.5, units = 'in')
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point() + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3))
ggsave('bleu.map.all.png', width = 4.5, height = 4.5, units = 'in')
summary(ir)
summary(all)
# Rearrange data to do side-by-side BPE comparisons
all.bpecomparison <- spread(data, rbo)
# Rearrange data to do side-by-side BPE comparisons
all.bpecomparison <- spread(all, rbo)
summary(all)
?gather
gather(data, key, value)
gather(all, key, value)
gather(all, rbo, value)
gather(all, metric, score, rbo)
summary(all)
gather(all, metric, score, map:prec4.lower.stem.depunc)
summary(gather(all, metric, score, map:prec4.lower.stem.depunc))
summary(gather(all, metric, score, map:prec4.lower.stem.depunc, convert = TRUE))
# Rearrange data to do side-by-side BPE comparisons
all.long <- gather(all, metric, score, map:prec4.lower.stem.depunc)
spread(all.long, score)
spread(all.long, score, metric)
gather(all, metric, score, rbo)
?gather
# Rearrange data to do side-by-side BPE comparisons
all.long.rbo <- gather(all, metric, score, -rbo, rbo)
gather(all, metric, score, -rbo, rbo)
summary(all)
gather(all, metric, score, -map:prec4.lower.stem.depunc, rbo)
# Rearrange data to do side-by-side BPE comparisons
all.long.rbo <- gather(all, metric, score, -map:prec4.lower.stem.depunc, rbo, map)
summary(all)
?group_by
all %>% group_by(dataset, lang, size) %>% gather(all, metric, score, -map:prec4.lower.stem.depunc, bpe.tokens, rbo)
all %>% group_by(dataset, lang, size)
tmp <- all %>% group_by(dataset, lang, size)
all %>% group_by(dataset, lang, size, bpe.tokens) %>% gather(all, metric, score, rbo)
# Rearrange data to do side-by-side BPE comparisons
all.long.rbo <- all %>% group_by(dataset, lang, size, bpe.tokens) %>% gather(all, metric, score, rbo, map)
# Rearrange data to do side-by-side BPE comparisons
all.long.rbo <- all %>% group_by(dataset, lang, size, bpe.tokens) %>% gather(all, metric, score, map:prec4.lower.stem.depunc)
all %>% group_by(dataset, lang, size, bpe.tokens) %>% gather(metric, score, rbo, map)
all %>% group_by(dataset, lang, size, bpe.tokens) %>% gather(metric, score, -rbo, rbo)
all %>% group_by(dataset, lang, size, bpe.tokens) %>% gather(metric, score, -rbo, rbo, mapply(function, ...))
all %>% group_by(dataset, lang, size, bpe.tokens) %>% gather(metric, score, -rbo, rbo, map)
all %>% group_by(dataset, lang, size, bpe.tokens) %>% gather(metric, score, -map:prec4.lower.stem.depunc, rbo)
all %>% group_by(dataset, lang, size, bpe.tokens) %>% gather(metric, score, -map:prec4.lower.stem.depunc, rbo, map)
all %>% group_by(dataset, lang, size, bpe.tokens) %>% gather(metric, score, -map)
all %>% group_by(dataset, lang, size, bpe.tokens) %>% gather(metric, score, -map)
mt <- as.tbl(read.csv('output/mt_scores.csv', sep='\t'))
mt$bpe.tokens <- factor(mt$bpe.tokens)
summary(mt)
ir <- as.tbl(read.csv('output/ir_scores.tsv', sep='\t'))
ir$bpe.tokens <- factor(ir$bpe.tokens)
summary(ir)
ir.all <- filter(ir, query == 'all')
ir.queries <- filter(ir, query != 'all')
write.table(ir.queries, 'output/ir_scores_queries_only.tsv', sep = '\t', quote = FALSE, row.names = FALSE)
all <- left_join(ir.all, mt, by = c('lang', 'size', 'bpe.tokens'))
summary(all)
write.table(all, 'output/mt_ir_scores_all.tsv', sep = '\t', quote = FALSE, row.names = FALSE)
write.table(all, 'output/mt_ir_scores_all.tsv', sep = '\t', quote = FALSE, row.names = FALSE)
write.table(all, 'output/mt_ir_scores_all.tsv', sep = '\t', quote = FALSE, row.names = FALSE)
bpe <- as.tbl(read.csv('output/mt_ir_bpe_delta.tsv', sep='\t'))
bpe <- as.tbl(read.csv('output/mt_ir_bpe_delta.tsv', sep='\t'))
bpe$size <- factor(bpe$size)
summary(bpe)
ggplot(bpe, aes(blue.lower.delta, rbo.delta)) + geom_point()
ggplot(bpe, aes(bleu.lower.delta, rbo.delta)) + geom_point()
ggplot(bpe, aes(bleu.lower.delta, rbo.delta, color=dataset:model:lang)) + geom_point()
bpe <- as.tbl(read.csv('output/mt_ir_bpe_delta.tsv', sep='\t'))
bpe$size <- factor(bpe$size)
summary(bpe)
ggplot(bpe, aes(bleu.lower.delta, rbo.delta, color=dataset:model:lang)) + geom_point()
ggplot(bpe, aes(bleu.lower.delta, rbo.delta, shape = dataset:model:lang)) + geom_point()
ggplot(bpe, aes(bleu.lower.delta, rbo.delta, shape = dataset:model:lang)) + geom_point() + hline(0)
ggplot(bpe, aes(bleu.lower.delta, rbo.delta, shape = dataset:model:lang)) + geom_point() + abline(y = 0)
ggplot(bpe, aes(bleu.lower.delta, rbo.delta, shape = dataset:model:lang)) + geom_point() + geom_abline(y = 0)
?geom_abline
ggplot(bpe, aes(bleu.lower.delta, rbo.delta, shape = dataset:model:lang)) + geom_point() + geom_abline(intercept = 0)
ggplot(bpe, aes(bleu.lower.delta, rbo.delta, shape = dataset:model:lang)) + geom_point() + geom_abline(intercept = 0, slope = 0)
?geom_hline
ggplot(bpe, aes(bleu.lower.delta, rbo.delta, shape = dataset:model:lang)) + geom_point() + geom_hline(intercept = 0, slope = 0)
ggplot(bpe, aes(bleu.lower.delta, rbo.delta, shape = dataset:model:lang)) + geom_point() + geom_hline(yintercept = 0, slope = 0)
ggplot(bpe, aes(bleu.lower.delta, rbo.delta, shape = dataset:model:lang)) + geom_point() + geom_hline(yintercept = 0)
?wilcox.test
?cor
cor(bpe$bleu.lower.delta, bpe$rbo.delta, method = "spearman")
?cor.test
cor.test(bpe$bleu.lower.delta, bpe$rbo.delta, method = "spearman")
cor.test(bpe$bleu.lower.delta, bpe$rbo.delta, method = "spearman", exact = TRUE)
cor.test(bpe$bleu.lower.delta, bpe$rbo.delta, method = "kendall")
cor.test(bpe$bleu.lower.delta, bpe$rbo.delta, method = "spearman", exact = FALSE)
bpe <- as.tbl(read.csv('output/mt_ir_bpe_delta.tsv', sep='\t'))
bpe$size <- factor(bpe$size)
bpe$match <- sign(bpe$bleu.lower.delta) == sign(bpe$rbo.delta)
summary(bpe)
ggplot(bpe, aes(bleu.lower.delta, rbo.delta, shape = dataset:model)) + geom_point() + geom_hline(yintercept = 0)
ggplot(bpe, aes(bleu.lower.delta, rbo.delta, shape = dataset)) + geom_point() + geom_hline(yintercept = 0)
ggplot(bpe, aes(bleu.lower.delta, rbo.delta, shape = dataset)) + geom_point() + geom_hline(yintercept = 0) + geom_vline(xintercept = 0)
table(bpe$dataset, bpe$match)
?facet_wrap
ggplot(bpe, aes(bleu.lower.delta, rbo.delta)) + geom_point() + geom_hline(yintercept = 0) + geom_vline(xintercept = 0) + facet_wrap(vars(dataset))
bpe.wiki <- filter(bpe, dataset == 'wiki')
bpe.europarl <- filter(bpe, dataset == 'europarl')
cor.test(bpe.wiki$bleu.lower.delta, bpe.wiki$rbo.delta, method = "spearman", exact = FALSE)
cor.test(bpe.wiki$bleu.lower.delta, bpe.wiki$rbo.delta, method = "spearman")
cor.test(bpe.europarl$bleu.lower.delta, bpe.europarl$rbo.delta, method = "spearman", exact = FALSE)
cor.test(bpe.wiki$bleu.lower.delta, bpe.wiki$rbo.delta, method = "spearman", exact = FALSE)
cor.test(bpe.europarl$bleu.lower.delta, bpe.europarl$rbo.delta, method = "spearman", exact = FALSE)
library(ggplot2)
theme_set(theme_bw())
bpe <- as.tbl(read.csv('output/mt_ir_bpe_delta.tsv', sep='\t'))
bpe$size <- factor(bpe$size)
bpe$match <- sign(bpe$bleu.lower.delta) == sign(bpe$rbo.delta)
summary(bpe)
bpe.wiki <- filter(bpe, dataset == 'wiki')
bpe.europarl <- filter(bpe, dataset == 'europarl')
table(bpe$dataset, bpe$match)
cor.test(bpe.wiki$bleu.lower.delta, bpe.wiki$rbo.delta, method = "spearman", exact = FALSE)
cor.test(bpe.europarl$bleu.lower.delta, bpe.europarl$rbo.delta, method = "spearman", exact = FALSE)
ggplot(bpe, aes(bleu.lower.delta, rbo.delta)) + geom_point() + geom_hline(yintercept = 0) + geom_vline(xintercept = 0) + facet_wrap(vars(dataset))
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point() + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3))
ggsave('bleu.map.all.png', width = 4.5, height = 4.5, units = 'in')
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang, shape = bpe.tokens)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point() + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3))
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point() + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3))
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(shape = bpe.tokens) + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3))
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3))
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3)) + ylab('MAP') + xlab('BLEU')
?guide_legend
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3, label = 'Configuration')) + ylab('MAP') + xlab('BLEU')
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3) + ylab('MAP') + xlab('BLEU') + labs(color = 'Configuration')
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3)) + ylab('MAP') + xlab('BLEU') + labs(color = 'Configuration')
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3)) + ylab('MAP') + xlab('BLEU') + labs(color = 'Experiment', shape = 'BPE Size')
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size')
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_manual(values = c("a"))
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_manual(values = c("Europarl BM25 CS", "Europarl BM25 DE", "Wiki BM25 CS", "Wiki BM25 DE", "Wiki Neural CS", "Wiki Neural DE"))
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_manual(labels = c("Europarl BM25 CS", "Europarl BM25 DE", "Wiki BM25 CS", "Wiki BM25 DE", "Wiki Neural CS", "Wiki Neural DE"))
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_manual(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"), values = c("wiki:bm25:cs", "wiki:bm25:de", "europarl:bm25:cs", "europarl:bm25:cs", "wiki:neural:cs", "wiki:neural:cs"))
?scale_color_manual
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_manual(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"), breaks = c("wiki:bm25:cs", "wiki:bm25:de", "europarl:bm25:cs", "europarl:bm25:cs", "wiki:neural:cs", "wiki:neural:cs"))
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_manual(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"))
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_manual(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"), values = waiver())
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_manual(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"), limits = c("wiki:bm25:cs", "wiki:bm25:de", "europarl:bm25:cs", "europarl:bm25:cs", "wiki:neural:cs", "wiki:neural:cs"))
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_discrete(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"), breaks = c("wiki:bm25:cs", "wiki:bm25:de", "europarl:bm25:cs", "europarl:bm25:cs", "wiki:neural:cs", "wiki:neural:cs"))
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom") + guides(color = guide_legend(nrow = 3)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_discrete(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"), breaks = c("wiki:bm25:cs", "wiki:bm25:de", "europarl:bm25:cs", "europarl:bm25:de", "wiki:neural:cs", "wiki:neural:de"))
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "right") + guides(color = guide_legend(nrow = 3)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_discrete(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"), breaks = c("wiki:bm25:cs", "wiki:bm25:de", "europarl:bm25:cs", "europarl:bm25:de", "wiki:neural:cs", "wiki:neural:de"))
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "right") + guides(color = guide_legend(ncol = 3)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_discrete(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"), breaks = c("wiki:bm25:cs", "wiki:bm25:de", "europarl:bm25:cs", "europarl:bm25:de", "wiki:neural:cs", "wiki:neural:de"))
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "right") + guides(color = guide_legend(ncol = 1)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_discrete(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"), breaks = c("wiki:bm25:cs", "wiki:bm25:de", "europarl:bm25:cs", "europarl:bm25:de", "wiki:neural:cs", "wiki:neural:de"))
ggsave('bleu.map.all.png', width = 4.5, height = 5, units = 'in')
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "right") + guides(color = guide_legend(ncol = 1)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_discrete(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"), breaks = c("wiki:bm25:cs", "wiki:bm25:de", "europarl:bm25:cs", "europarl:bm25:de", "wiki:neural:cs", "wiki:neural:de"))
ggsave('bleu.map.all.png', width = 4.5, height = 5, units = 'in')
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "right") + guides(color = guide_legend(ncol = 1)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_discrete(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"), breaks = c("wiki:bm25:cs", "wiki:bm25:de", "europarl:bm25:cs", "europarl:bm25:de", "wiki:neural:cs", "wiki:neural:de"))
ggsave('bleu.map.all.png', width = 4.5, height = 5, units = 'in')
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom") + guides(color = guide_legend(ncol = 3)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_discrete(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"), breaks = c("wiki:bm25:cs", "wiki:bm25:de", "europarl:bm25:cs", "europarl:bm25:de", "wiki:neural:cs", "wiki:neural:de"))
ggsave('bleu.map.all.png', width = 4.5, height = 5, units = 'in')
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom") + guides(color = guide_legend(ncol = 2)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_discrete(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"), breaks = c("wiki:bm25:cs", "wiki:bm25:de", "europarl:bm25:cs", "europarl:bm25:de", "wiki:neural:cs", "wiki:neural:de"))
ggsave('bleu.map.all.png', width = 4.5, height = 5, units = 'in')
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom", legend.box = "vertical") + guides(color = guide_legend(ncol = 2)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_discrete(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"), breaks = c("wiki:bm25:cs", "wiki:bm25:de", "europarl:bm25:cs", "europarl:bm25:de", "wiki:neural:cs", "wiki:neural:de"))
ggsave('bleu.map.all.png', width = 4.5, height = 5, units = 'in')
corrs <- as.tbl(read.csv('mt_ir_scores_corr.tsv', sep='\t'))
corrs <- unite(corrs, dataset.model, dataset, model, remove = FALSE)
corrs <- corrs %>% group_by(dataset.model, measure1, measure2) %>% summarise_if(is.numeric, mean, na.rm = TRUE)
corrs.rbo <- filter(corrs, measure2 == 'rbo')
bleu.precs <- c("prec1.lower", "prec2.lower", "prec3.lower", "prec4.lower")
ggplot(filter(corrs.rbo, measure1 %in% bleu.precs), aes(measure1, corr, color = dataset.model)) + geom_point() + geom_hline(aes(yintercept = corr, color = dataset.model), filter(corrs.rbo, measure1 == 'bleu.lower'), linetype = 2) + scale_y_continuous(breaks = seq(0.65, 1.0, 0.05), minor_breaks = seq(0.65, 1.0, 0.01)) + ylab("Kendall's Tau") + xlab("N-gram Precision Measure") + labs(color = "Dataset & Model") + scale_color_discrete(breaks = c("europarl_bm25", "wiki_bm25", "wiki_neural"), labels = c("Europarl BM25", "Wikipedia BM25", "Wikipedia neural")) + scale_x_discrete(breaks = c('prec1.lower', 'prec2.lower', 'prec3.lower', 'prec4.lower'), labels = c('Unigram', 'Bigram', 'Trigram', '4-gram'))
ggsave('tau.bleu.rbo.png', width = 4.5, height = 2.25, units = 'in')
# Summarize for a table
summary(corrs.rbo)
?summarize
# Summarize for a table
corrs.rbo.means <- select(corrs.rbo, -measure2) %>% group_by(dataset.model) %>% summarize(mean = mean(corr))
corrs.rbo.means
# Summarize for a table
corrs.rbo.means <- select(corrs.rbo, -measure2) %>% group_by(measure1) %>% summarize(mean = mean(corr))
corrs.rbo.means
# Summarize for a table
corrs.rbo.means <- select(corrs.rbo, -measure2) %>% group_by(dataset.model, measure1) %>% summarize(mean = mean(corr))
corrs.rbo.means
?cbind
cbind(c(1, 2), c(3, 4))
rbind(c(1, 2), c(3, 4))
c(c(1, 2), c(3, 4))
c(1, c(3, 4))
bleu.all <- c("bleu.lower", bleu.precs)
# Summarize for a table
corrs.rbo.means <- select(corrs.rbo, -measure2) %>% filter(measure1 %in% bleu.all) %>% group_by(dataset.model, measure1) %>% summarize(mean = mean(corr))
corrs.rbo.means
table(corrs.rbo.means)
?filter
# Summarize for a table
corrs.rbo.means <- select(corrs.rbo, -measure2) %>% filter(measure1 %in% bleu.all) %>% droplevels() %>% group_by(dataset.model, measure1) %>% summarize(mean = mean(corr))
table(corrs.rbo.means)
summary(corrs.rbo.means)
head(corrs.rbo.means)
?table
packages.install("xtable")
install.packages("xtable")
xtable(corrs.rbo.means)
library(xtable)
xtable(corrs.rbo.means)
?gather
?spread
spread(corrs.rbo.means, measure1, mean)
# Summarize for a table
corrs.rbo.means <- select(corrs.rbo, -measure2) %>% filter(measure1 %in% bleu.all) %>% droplevels() %>% group_by(dataset.model, measure1) %>% summarize(mean = mean(corr)) %>% spread(corrs.rbo.means, measure1, mean)
# Summarize for a table
corrs.rbo.means <- select(corrs.rbo, -measure2) %>% filter(measure1 %in% bleu.all) %>% droplevels() %>% group_by(dataset.model, measure1) %>% summarize(mean = mean(corr)) %>% spread(measure1, mean)
summary(corrs.rbo.means)
xtable(corrs.rbo.means)
# Summarize for a
corrs.rbo.means <- select(corrs.rbo, -measure2) %>% filter(measure1 %in% bleu.all) %>% droplevels() %>% group_by(dataset.model, measure1) %>% summarize(mean = mean(corr)) %>% spread(measure1, mean)
xtable(corrs.rbo.means)
?xtable
xtable(corrs.rbo.means, digits = 3)
print(xtable(corrs.rbo.means, digits = 3), include.rownames = FALSE)
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom", legend.box = "vertical", legend.key.size = 0.9) + guides(color = guide_legend(ncol = 2)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_discrete(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"), breaks = c("wiki:bm25:cs", "wiki:bm25:de", "europarl:bm25:cs", "europarl:bm25:de", "wiki:neural:cs", "wiki:neural:de"))
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom", legend.box = "vertical", legend.key.size = unit(0.9, lines)) + guides(color = guide_legend(ncol = 2)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_discrete(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"), breaks = c("wiki:bm25:cs", "wiki:bm25:de", "europarl:bm25:cs", "europarl:bm25:de", "wiki:neural:cs", "wiki:neural:de"))
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom", legend.box = "vertical", legend.key.size = unit(0.9, 'lines')) + guides(color = guide_legend(ncol = 2)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_discrete(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"), breaks = c("wiki:bm25:cs", "wiki:bm25:de", "europarl:bm25:cs", "europarl:bm25:de", "wiki:neural:cs", "wiki:neural:de"))
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom", legend.box = "vertical") + guides(color = guide_legend(ncol = 2)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_discrete(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"), breaks = c("wiki:bm25:cs", "wiki:bm25:de", "europarl:bm25:cs", "europarl:bm25:de", "wiki:neural:cs", "wiki:neural:de"))
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom", legend.box = "horizontal") + guides(color = guide_legend(ncol = 2)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_discrete(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"), breaks = c("wiki:bm25:cs", "wiki:bm25:de", "europarl:bm25:cs", "europarl:bm25:de", "wiki:neural:cs", "wiki:neural:de"))
ggsave('bleu.map.all.png', width = 4.5, height = 5, units = 'in')
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom", legend.box = "vertical") + guides(color = guide_legend(ncol = 2)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_discrete(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"), breaks = c("wiki:bm25:cs", "wiki:bm25:de", "europarl:bm25:cs", "europarl:bm25:de", "wiki:neural:cs", "wiki:neural:de"))
ggsave('bleu.map.all.png', width = 4.5, height = 5, units = 'in')
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom", legend.box = "vertical", legend.key.size = unit(0.9, 'lines')) + guides(color = guide_legend(ncol = 3)) + labs(x = 'BLEU', y = 'MAP',color = 'Experiment', shape = 'BPE Size') + scale_color_discrete(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"), breaks = c("wiki:bm25:cs", "wiki:bm25:de", "europarl:bm25:cs", "europarl:bm25:de", "wiki:neural:cs", "wiki:neural:de"))
ggsave('bleu.map.all.png', width = 4.5, height = 5, units = 'in')
ggsave('bleu.map.all.png', width = 6, height = 7, units = 'in')
ggsave('bleu.map.all.png', width = 5, height = 7, units = 'in')
ggsave('bleu.map.all.png', width = 5, height = 6, units = 'in')
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom", legend.box = "vertical") + guides(color = guide_legend(ncol = 3)) + labs(x = 'BLEU', y = 'MAP', color = 'Collection', shape = 'BPE Size') + scale_color_discrete(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"), breaks = c("wiki:bm25:cs", "wiki:bm25:de", "europarl:bm25:cs", "europarl:bm25:de", "wiki:neural:cs", "wiki:neural:de"))
ggplot(all, aes(bleu.lower, map, color = dataset:model:lang)) + geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs"), se = FALSE) + geom_point(aes(shape = bpe.tokens)) + theme(legend.position = "bottom", legend.box = "vertical") + guides(color = guide_legend(ncol = 3)) + labs(x = 'BLEU', y = 'MAP', color = 'Collection', shape = 'BPE Size') + scale_color_discrete(labels = c("Wiki BM25 CS", "Wiki BM25 DE", "Europarl BM25 CS", "Europarl BM25 DE", "Wiki Neural CS", "Wiki Neural DE"), breaks = c("wiki:bm25:cs", "wiki:bm25:de", "europarl:bm25:cs", "europarl:bm25:de", "wiki:neural:cs", "wiki:neural:de"))
ggsave('bleu.map.all.png', width = 4.25, height = 5.5, units = 'in')
ggsave('bleu.map.all.png', width = 5, height = 5.5, units = 'in')
# Test set BLEU
ggplot(mt, aes(size, bleu.lower, group=interaction(lang, bpe.tokens), color = bpe.tokens)) + geom_point() + geom_line() + facet_grid(rows = vars(lang), labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('BLEU') + scale_y_continuous(breaks = seq(10, 36, 2)) + labs(color = 'BPE Size') + scale_colour_grey(start = 0.0, end = 0.6)
# Test set BLEU
ggplot(mt, aes(size, bleu.lower, group=interaction(lang, bpe.tokens), color = bpe.tokens)) + geom_point() + geom_line() + facet_grid(cols = vars(lang), labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('BLEU') + scale_y_continuous(breaks = seq(10, 36, 2)) + labs(color = 'BPE Size') + scale_colour_grey(start = 0.0, end = 0.6)
ggsave('size.bleu.bpe.png', width = 4.5, height = 3.0, units = 'in')
ggsave('size.bleu.bpe.png', width = 4.5, height = 4.0, units = 'in')
# Test set BLEU
ggplot(mt, aes(size, bleu.lower, group=interaction(lang, bpe.tokens), color = bpe.tokens, shape = bpe.tokens)) + geom_point() + geom_line() + facet_grid(cols = vars(lang), labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('BLEU') + scale_y_continuous(breaks = seq(10, 36, 2)) + labs(color = 'BPE Size') + scale_colour_grey(start = 0.0, end = 0.6)
# Test set BLEU
ggplot(mt, aes(size, bleu.lower, group=interaction(lang, bpe.tokens), color = bpe.tokens, shape = bpe.tokens)) + geom_point() + geom_line() + facet_grid(cols = vars(lang), labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('BLEU') + scale_y_continuous(breaks = seq(10, 36, 2)) + labs(color = 'BPE Size', shape = 'BPE Size') + scale_colour_grey(start = 0.0, end = 0.6)
ggsave('size.bleu.bpe.png', width = 4.5, height = 4.0, units = 'in')
scale_y_continuous()
?scale_y_continuous
# Test set BLEU
ggplot(mt, aes(size / 1000, bleu.lower, group=interaction(lang, bpe.tokens), color = bpe.tokens, shape = bpe.tokens)) + geom_point() + geom_line() + facet_grid(cols = vars(lang), labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('BLEU') + scale_y_continuous(breaks = seq(10, 36, 2)) + labs(color = 'BPE Size', shape = 'BPE Size') + scale_colour_grey(start = 0.0, end = 0.6)
# Test set BLEU
ggplot(mt, aes(size / 1000, bleu.lower, group=interaction(lang, bpe.tokens), color = bpe.tokens, shape = bpe.tokens)) + geom_point() + geom_line() + facet_grid(cols = vars(lang), labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (thousands of sentences)') + ylab('BLEU') + scale_y_continuous(breaks = seq(10, 36, 2)) + labs(color = 'BPE Size', shape = 'BPE Size') + scale_colour_grey(start = 0.0, end = 0.6)
ggsave('size.bleu.bpe.png', width = 4.5, height = 4.0, units = 'in')
# Test set BLEU
ggplot(mt, aes(size / 1000, bleu.lower, group=interaction(lang, bpe.tokens), color = bpe.tokens, shape = bpe.tokens)) + geom_point() + geom_line() + facet_grid(cols = vars(lang), labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (thousands of sentences)') + ylab('BLEU') + scale_y_continuous(breaks = seq(10, 36, 2)) + labs(color = 'BPE Size', shape = 'BPE Size') + scale_colour_grey(start = 0.0, end = 0.6)
ggsave('size.bleu.bpe.png', width = 4.5, height = 5.0, units = 'in')
ggplot(ir.all, aes(size, rbo, group=interaction(lang, bpe.tokens), color = bpe.tokens, shape = bpe.tokens)) + geom_point() + geom_line() + facet_grid(cols = vars(lang), rows = vars(dataset, model), scales = 'free', labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('RBO') + labs(color = 'BPE Size', shape = 'BPE Size') + scale_y_continuous(labels = number_format(accuracy = 0.01)) +  + scale_colour_grey(start = 0.0, end = 0.6)
ggplot(ir.all, aes(size, rbo, group=interaction(lang, bpe.tokens), color = bpe.tokens, shape = bpe.tokens)) + geom_point() + geom_line() + facet_grid(cols = vars(lang), rows = vars(dataset, model), scales = 'free', labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('RBO') + labs(color = 'BPE Size', shape = 'BPE Size') + scale_y_continuous(labels = number_format(accuracy = 0.01)) +  + scale_colour_grey(start = 0.0, end = 0.6)
ggplot(ir.all, aes(size, rbo, group=interaction(lang, bpe.tokens), color = bpe.tokens, shape = bpe.tokens)) + geom_point() + geom_line() + facet_grid(cols = vars(lang), rows = vars(dataset, model), scales = 'free', labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (sentences)') + ylab('RBO') + labs(color = 'BPE Size', shape = 'BPE Size') + scale_y_continuous(labels = number_format(accuracy = 0.01)) + scale_colour_grey(start = 0.0, end = 0.6)
ggplot(ir.all, aes(size / 1000, rbo, group=interaction(lang, bpe.tokens), color = bpe.tokens, shape = bpe.tokens)) + geom_point() + geom_line() + facet_grid(cols = vars(lang), rows = vars(dataset, model), scales = 'free', labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (thousands of sentences)') + ylab('RBO') + labs(color = 'BPE Size', shape = 'BPE Size') + scale_y_continuous(labels = number_format(accuracy = 0.01)) + scale_colour_grey(start = 0.0, end = 0.6)
ggplot(ir.all, aes(size / 1000, rbo, group=interaction(lang, bpe.tokens), color = bpe.tokens, shape = bpe.tokens)) + geom_point() + geom_line() + facet_grid(cols = vars(lang), rows = vars(dataset, model), scales = 'free', labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (thousands of sentences)') + ylab('RBO') + labs(color = 'BPE Size', shape = 'BPE Size') + scale_y_continuous(labels = number_format(accuracy = 0.01)) + scale_colour_grey(start = 0.0, end = 0.6)
ggsave('size.rbo.bpe.png', width = 4.5, height = 5, units = 'in')
# Test set BLEU
ggplot(mt, aes(size / 1000, bleu.lower, group=interaction(lang, bpe.tokens), color = bpe.tokens, shape = bpe.tokens)) + geom_point() + geom_line() + facet_grid(cols = vars(lang), labeller = facet_labeller) + theme(legend.justification = c(1, 0), legend.position = c(.99, 0.02)) + xlab('MT Training Size (thousands of sentences)') + ylab('BLEU') + scale_y_continuous(breaks = seq(10, 36, 2)) + labs(color = 'BPE Size', shape = 'BPE Size') + scale_colour_grey(start = 0.0, end = 0.6)
ggsave('size.bleu.bpe.png', width = 4.5, height = 3.0, units = 'in')
summary(bpe)
bpe.wiki.bm25 <- filter(bpe, dataset == 'wiki', model == 'bm25')
bpe.wiki.neural <- filter(bpe, dataset == 'wiki', model == 'neural')
bpe.europarl.bm25 <- filter(bpe, dataset == 'europarl')
table(bpe$dataset, bpe$match)
table(paste(bpe$dataset, bpe$model, sep = ":"), bpe$match)
xtable(table(paste(bpe$dataset, bpe$model, sep = ":"), bpe$match))
xtable(paste(bpe$dataset, bpe$model, sep = ":"), bpe$match)
xtable(table(paste(bpe$dataset, bpe$model, sep = ":"), bpe$match))
# Lowercase BLEU, by model/collection
summary(lm(map ~ I(bleu.lower / 100) + dataset + lang + model + bpe.tokens, filter(all, dataset == 'europarl'))
# Lowercase BLEU, by model/collection
summary(lm(map ~ I(bleu.lower / 100) + dataset + lang + model + bpe.tokens, filter(all, dataset == 'europarl')))
# Lowercase BLEU, by model/collection
summary(lm(map ~ I(bleu.lower / 100) + dataset + lang + model + bpe.tokens, filter(all, dataset == 'europarl')))
# Lowercase BLEU, by model/collection
summary(lm(map ~ I(bleu.lower / 100) + lang + bpe.tokens, filter(all, dataset == 'europarl')))
summary(lm(map ~ I(bleu.lower / 100) + lang + bpe.tokens, filter(all, dataset == 'wiki', model == 'bm25')))
summary(lm(map ~ I(bleu.lower / 100) + lang + bpe.tokens, filter(all, dataset == 'europarl', model == 'neural')))
summary(lm(map ~ I(bleu.lower / 100) + lang + bpe.tokens, filter(all, dataset == 'wiki', model == 'neural')))
# Lowercase BLEU, by model/collection
summary(lm(map ~ I(bleu.lower / 100) + lang + bpe.tokens, filter(all, dataset == 'europarl')))
summary(lm(map ~ I(bleu.lower / 100) + lang + bpe.tokens, filter(all, dataset == 'wiki', model == 'bm25')))
summary(lm(map ~ I(bleu.lower / 100) + lang + bpe.tokens, filter(all, dataset == 'wiki', model == 'neural')))
print(xtable(corrs.rbo.means, digits = 3), include.rownames = FALSE)
# Table: dataset.model and RBO correlations with BLEU and precision1-4
corrs.rbo.means <- select(corrs.rbo, -measure2) %>% filter(measure1 %in% bleu.all) %>% droplevels() %>% group_by(dataset.model, measure1) %>% summarize(mean = mean(corr)) %>% spread(measure1, mean)
print(xtable(corrs.rbo.means, digits = 3), include.rownames = FALSE)
# Table: dataset.model and RBO correlations with BLEU and precision1-4
corrs.rbo.means <- select(corrs.rbo, -measure2) %>% droplevels() %>% group_by(dataset.model, measure1) %>% summarize(mean = mean(corr)) %>% spread(measure1, mean)
print(xtable(filter(corrs.rbo.means, measure1 %in% bleu.all), digits = 3), include.rownames = FALSE)
# Table: dataset.model and RBO correlations with BLEU and precision1-4
corrs.rbo.means <- select(corrs.rbo, -measure2) %>% droplevels() %>% group_by(dataset.model, measure1) %>% summarize(mean = mean(corr))
corrs.rbo.means
corrs.rbo.bleu.precs <- filter(corrs.rbo.means, measure1 %in% bleu.all) %>% spread(measure1, mean)
print(xtable(corrs.rbo.bleu.precs, digits = 3), include.rownames = FALSE)
corrs.rbo.bleu.variations <- filter(corrs.rbo.means, measure1 %in% bleu.variations) %>% spread(measure1, mean)
print(xtable(corrs.rbo.bleu.variations, digits = 3), include.rownames = FALSE)
corrs.rbo.bleu.variations <- filter(corrs.rbo.means, measure1 %in% bleu.variations) %>% spread(measure1, mean)
bleu.variations <- c("bleu.lower", "bleu.lower.depunc", "bleu.lower.stem", "bleu.lower.stem.depunc")
corrs.rbo.bleu.variations <- filter(corrs.rbo.means, measure1 %in% bleu.variations) %>% spread(measure1, mean)
print(xtable(corrs.rbo.bleu.variations, digits = 3), include.rownames = FALSE)
all
summary(mt)
# Appendix tables
(bleu.tab <- mt %>% select(lang, size, bpe.tokens, bleu.lower))
# Appendix tables
(bleu.tab <- mt %>% select(lang, size, bpe.tokens, bleu.lower) %>% group_by(lang, bpe.tokens))
# Appendix tables
(bleu.tab <- mt %>% select(lang, size, bpe.tokens, bleu.lower) %>% group_by(lang, bpe.tokens) %>% spread(size, bleu.lower))
# Appendix tables
bleu.tab <- mt %>% select(lang, size, bpe.tokens, bleu.lower) %>% group_by(lang, bpe.tokens) %>% spread(size, bleu.lower)
print(xtable(bleu.tab), include.rownames = FALSE)
?xtable
summary(ir)
summary(ir.all)
# Appendix tables
bleu.tab <- mt %>% select(lang, size, bpe.tokens, bleu.lower) %>% group_by(lang, bpe.tokens) %>% spread(size, bleu.lower)
# Appendix tables
(bleu.tab <- mt %>% select(lang, size, bpe.tokens, bleu.lower) %>% group_by(lang, bpe.tokens) %>% spread(size, bleu.lower))
# Appendix tables
(bleu.tab <- mt %>% select(lang, size, bpe.tokens, bleu.lower) %>% spread(size, bleu.lower))
ir.all.rbo.map <- ir.all %>% select(lang, dataset, model, size, bpe.tokens, map)
ir.all.rbo.map
ir.all.rbo.map <- ir.all %>% select(lang, dataset, model, size, bpe.tokens, map, rbo)
ir.all.rbo.tab <- ir.all.rbo.map %>% select(-map) %>% spread(size, map)
ir.all.rbo.tab <- ir.all.rbo.map %>% select(-map) %>% spread(size, rbo)
ir.all.rbo.tab
print(xtable(ir.all.rbo.tab), include.rownames = FALSE)
print(xtable(ir.all.rbo.tab, digits = 3), include.rownames = FALSE)
ir.all.map.tab <- ir.all.rbo.map %>% select(-rbo) %>% spread(size, map)
print(xtable(ir.all.map.tab, digits = 3), include.rownames = FALSE)
